@page "/"


@using Order.Management.WebApp.Data
@inject ISupplierService SupplierService


<NavLink class="nav-link" href="Add">
    <span class="oi oi-plus" aria-hidden="true">Add New</span>

</NavLink>

<h1>Suppliers</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (suppliers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>AddressLine1</th>
                 <th>AddressLine</th>
                <th>City</th>
                <th>PostalCode</th>
                <th>State</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var supplier in suppliers)
            {
                <tr>
                    <td>@supplier.Name</td>
                    <td>@supplier.AddressLine1</td>
                    <td>@supplier.AddressLine</td>
                    <td>@supplier.City</td>
                    <td>@supplier.PostalCode</td>
                    <td>@supplier.StateId</td>
                     <td>
                    <a class="nav-link" href="Edit/@supplier.Supplierid">
                        <span class="oi oi-pencil" aria-hidden="true">Edit</span>
                    </a>
                    <a class="nav-link" href="Delete/@supplier.Supplierid">
                        <span class="oi oi-trash" aria-hidden="true">Delete</span>
                    </a>
                </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Supplier> suppliers;

    protected override async Task OnInitializedAsync()
    {
        //forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        suppliers = await SupplierService.GetAllSuppliersAsync();
    }
}
